[{"D:\\Self-Learnings\\todoapp\\src\\index.js":"1","D:\\Self-Learnings\\todoapp\\src\\reportWebVitals.js":"2","D:\\Self-Learnings\\todoapp\\src\\App.js":"3","D:\\Self-Learnings\\todoapp\\src\\components\\form.js":"4","D:\\Self-Learnings\\todoapp\\src\\components\\Form.js":"5","D:\\Self-Learnings\\todoapp\\src\\components\\TodoList.js":"6","D:\\Self-Learnings\\todoapp\\src\\components\\Todo.js":"7"},{"size":478,"mtime":1610607929737,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2249,"mtime":1610661659510,"results":"11","hashOfConfig":"9"},{"size":1241,"mtime":1610657127314,"results":"12","hashOfConfig":"9"},{"size":1241,"mtime":1610657127314,"results":"13","hashOfConfig":"9"},{"size":628,"mtime":1610656880010,"results":"14","hashOfConfig":"9"},{"size":1027,"mtime":1610656695171,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6i11m8",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\Self-Learnings\\todoapp\\src\\index.js",[],["33","34"],"D:\\Self-Learnings\\todoapp\\src\\reportWebVitals.js",[],"D:\\Self-Learnings\\todoapp\\src\\App.js",["35"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\n//importing components\n\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n\n    //states\n    const [inputText, setInputText] = useState(\"\");\n    const [todos, setTodos] = useState([]);\n    const [status, setStatus] = useState('all');\n    const [filteredTodos, setFilteredTodos] = useState([]);\n\n    //use effect\n    useEffect(() => {\n        getLocalTodos();\n    }, []);\n    useEffect(() => {\n        filterHandler();\n        saveLocalTodos();\n    }, [todos, status]);\n\n    //functions\n    const filterHandler = () => {\n        switch (status) {\n            case 'completed':\n                setFilteredTodos(todos.filter(todo => todo.completed === true));\n                break;\n            case 'uncompleted':\n                setFilteredTodos(todos.filter(todo => todo.completed !== true));\n                break;\n            default:\n                setFilteredTodos(todos);\n                break;\n        }\n    };\n\n    //save to local\n    const saveLocalTodos = () => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n    const getLocalTodos = () => {\n        if (localStorage.getItem(\"todos\") === null) {\n            localStorage.setItem(\"todos\", JSON.stringify([]));\n        } else {\n            let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n            setTodos(todoLocal);\n\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <section>\n                <header>\n                    <h1>To Do List</h1>\n                </header>\n                <subheader>\n                    <h4 style={{color: \"white\", marginLeft: \"70px\"}}>Add the tasks here</h4>\n                </subheader>\n\n                < Form\n                    inputText={inputText}\n                    todos={todos}\n                    setTodos={setTodos}\n                    setInputText={setInputText}\n                    setStatus={setStatus}\n                />\n                < TodoList\n                    setTodos={setTodos}\n                    todos={todos}\n                    filteredTodos={filteredTodos}\n                />\n            </section>\n        </div>\n    );\n\n}\nexport default App;\n","D:\\Self-Learnings\\todoapp\\src\\components\\form.js",[],["36","37"],"D:\\Self-Learnings\\todoapp\\src\\components\\Form.js",[],"D:\\Self-Learnings\\todoapp\\src\\components\\TodoList.js",[],"D:\\Self-Learnings\\todoapp\\src\\components\\Todo.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":24,"column":8,"nodeType":"44","endLine":24,"endColumn":23,"suggestions":"45"},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["50"],["48"],["49"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"53","text":"54"},[573,588],"[todos, status, filterHandler, saveLocalTodos]"]